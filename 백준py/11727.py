# 2xn 타일링
"""
일단 n이 홀수/짝수에 따라 다르다.
만약 n이 짝수일 경우..
2로 나눈 3**(n/2)가 정답이다.
만약 n이 홀수일 경우..
길다란 거 하나가 어디에 들어갈 수 있느냐가 중요하니까
3**((n-1)/2)*((n-1)/2+1)

입력
n <= 1007
그냥해도 되겟는데?

출력
방법수 % 10007

# 방법2
8을 2랑 1로 만든다고 하자.
8 = 2+2+2+2 = 2+2+2+1+1

4로 해보자.
4 = 2,2 = 2,1,1 = 1,1,1,1
1111 -> 1개
211 -> 3*3 -> 3Ca*3의 a승 -1
22 -> 3*3 -> 2Ca*3의 a승 -1
근데 여기서 또 생각해야할건 1111이 211이랑 22에 들어가있다.
그러니까 다 -1해줘야함.
근데 그 와중에 또 ||-- 가 겹친다.

6으로 해보자.
6 = 2,2,2 = 2,2,1,1 = 2,1,1,1,1 = 1,1,1,1,1,1

"""

import sys
n = int(sys.stdin.readline())
if n % 2 == 0:
    # 짝수
    res = 3**(n/2)
else:
    res = 3**((n-1)/2)*((n-1)/2+1)

print(int(res % 10007))
